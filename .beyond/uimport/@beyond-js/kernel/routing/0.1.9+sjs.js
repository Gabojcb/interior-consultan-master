{"code":"System.register([\"@beyond-js/kernel@0.1.9/bundle\",\"@beyond-js/kernel@0.1.9/core\"], (_exports, _context) => {\n\nconst bimport = specifier => {\n\tconst dependencies = new Map([[\"@beyond-js/kernel\",\"0.1.9\"]]);\n\treturn globalThis.bimport(globalThis.bimport.resolve(specifier, dependencies));\n};\n\n\nvar dependencies = new Map();\nvar require = dependency => dependencies.get(dependency);\nreturn {\nsetters: [dep => dependencies.set('@beyond-js/kernel@0.1.9/bundle', dep), dep => dependencies.set('@beyond-js/kernel@0.1.9/core', dep)],\nexecute: function() {\n// Prevent esbuild from considering the context to be amd\nconst define = void 0;\nconst module = {};\n\nconst code = (module, require) => {\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// .beyond/uimport/temp/@beyond-js/kernel/routing.0.1.9.js\nvar routing_0_1_9_exports = {};\n__export(routing_0_1_9_exports, {\n  URI: () => URI,\n  routing: () => routing\n});\nmodule.exports = __toCommonJS(routing_0_1_9_exports);\n\n// node_modules/@beyond-js/kernel/routing/routing.browser.mjs\nvar dependency_0 = __toESM(require(\"@beyond-js/kernel@0.1.9/bundle\"), 0);\nvar dependency_1 = __toESM(require(\"@beyond-js/kernel@0.1.9/core\"), 0);\nvar import_meta = {};\nvar {\n  Bundle: __Bundle\n} = dependency_0;\nvar __pkg = new __Bundle({\n  \"module\": {\n    \"vspecifier\": \"@beyond-js/kernel@0.1.9/routing\"\n  },\n  \"type\": \"ts\"\n}, _context.meta.url).package();\n;\n__pkg.dependencies.update([[\"@beyond-js/kernel/core\", dependency_1]]);\nvar ims = /* @__PURE__ */new Map();\nims.set(\"./history/history\", {\n  hash: 1835933971,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.BeyondHistory = void 0;\n    var _position = require2(\"./position\");\n    var _records = require2(\"./records\");\n    class BeyondHistory {\n      #position;\n      get position() {\n        return this.#position;\n      }\n      #records;\n      get records() {\n        return this.#records;\n      }\n      get valid() {\n        return this.#records.valid;\n      }\n      get current() {\n        return this.valid ? this.#records.current.uri : void 0;\n      }\n      #initial = history.length;\n      get initial() {\n        return this.#initial;\n      }\n      #processBrowserURI(uri) {\n        if (uri === void 0) return;\n        const {\n          routing: routing2\n        } = require2(\"../routing\");\n        const RoutingModeEnum = require2(\"../routing\").RoutingMode;\n        return routing2.mode === RoutingModeEnum.Hash ? `#${uri.substr(1)}` : uri;\n      }\n      #push(uri) {\n        this.#records.reset();\n        this.#records.push(uri);\n        this.#position.save(this.#records.length);\n      }\n      replaceState(state, title, uri) {\n        state = state ? state : {};\n        if (typeof state !== \"object\") throw new Error(\"Invalid state parameter\");\n        this.#records.updateCurrentURI(uri);\n        const position = this.#position.value;\n        history.replaceState(state, title, this.#processBrowserURI(uri));\n        this.#position.save(position);\n      }\n      pushState(uri, state) {\n        if (uri === `${location.pathname}${location.search}${location.hash}`) return;\n        state = state ? state : {};\n        if (typeof state !== \"object\") throw new Error(\"Invalid state parameter\");\n        history.pushState(state, null, this.#processBrowserURI(uri));\n        this.#push(uri);\n      }\n      back() {\n        const previous = this.#records.previous?.position;\n        const current = this.#records.current?.position;\n        if (!previous) return;\n        history.go(previous - current);\n      }\n      forward() {\n        const following = this.#records.following?.position;\n        const current = this.#records.current?.position;\n        if (!following) return;\n        history.go(following - current);\n      }\n      constructor(routing2, Mode) {\n        this.#position = new _position.HistoryPosition();\n        this.#records = new _records.HistoryRecords(this.#position);\n        if (this.#position.value === void 0) {\n          let uri = routing2.mode === Mode.Hash ? location.hash.slice(1) : `${location.pathname}${location.search}${location.hash}`;\n          this.#push(uri);\n        }\n      }\n    }\n    exports.BeyondHistory = BeyondHistory;\n  }\n});\nims.set(\"./history/position\", {\n  hash: 3613484025,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.HistoryPosition = void 0;\n    class HistoryPosition {\n      check() {\n        if (this.value) return true;\n        console.error(\"History state is not defined. This happen when state is changed outside the beyond defined navigation flows.\");\n        return false;\n      }\n      get value() {\n        return history.state?.__beyond_navigation_position;\n      }\n      save(position) {\n        const state = history.state ? history.state : {};\n        state.__beyond_navigation_position = position;\n        history.replaceState(state, null);\n      }\n    }\n    exports.HistoryPosition = HistoryPosition;\n  }\n});\nims.set(\"./history/records\", {\n  hash: 3466552890,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.HistoryRecords = void 0;\n    class HistoryRecords {\n      #position;\n      #valid = true;\n      get valid() {\n        return this.#valid;\n      }\n      #entries = [];\n      get entries() {\n        return this.#entries.slice();\n      }\n      get length() {\n        return this.#entries.length;\n      }\n      get current() {\n        return this.#entries[this.#position.value - 1];\n      }\n      get previous() {\n        const previous = this.#position.value - 2;\n        if (previous < 0) return;\n        return this.#entries[previous];\n      }\n      get following() {\n        const following = this.#position.value;\n        if (following >= this.#entries.length) return;\n        return this.#entries[following];\n      }\n      constructor(position) {\n        this.#position = position;\n        let parsed;\n        try {\n          const stored = sessionStorage.getItem(\"__beyond_navigation_records\");\n          if (!stored && position.value !== void 0) {\n            this.#valid = false;\n            return;\n          }\n          parsed = stored ? JSON.parse(stored) : [];\n        } catch (exc) {\n          this.#valid = false;\n          console.error(\"Error loading beyond navigation state\", exc instanceof Error ? exc.stack : exc);\n          this.#entries = [];\n        }\n        if (!(parsed instanceof Array)) {\n          const warning = \"The beyond navigation data, stored in session store is invalid.\";\n          console.warn(warning, parsed);\n        }\n        this.#entries = parsed;\n      }\n      #sanitizeURI(uri) {\n        if (uri === void 0) return;\n        return uri.startsWith(\"/\") ? uri : `/${uri}`;\n      }\n      get(index) {\n        return this.#entries[index];\n      }\n      push(uri) {\n        uri = this.#sanitizeURI(uri);\n        this.#entries.push({\n          uri,\n          position: history.length\n        });\n        this.save();\n      }\n      reset() {\n        const position = this.#position.value;\n        if (position) return;\n        this.#entries = this.#entries.filter(entry => entry.position < history.length);\n      }\n      updateCurrentURI(uri) {\n        if (!this.#valid) return;\n        const position = this.#position.value;\n        uri = this.#sanitizeURI(uri);\n        this.#entries[position - 1] = {\n          uri,\n          position: history.length\n        };\n        this.save();\n      }\n      save() {\n        if (!this.#valid) return;\n        sessionStorage.setItem(\"__beyond_navigation_records\", JSON.stringify(this.#entries));\n      }\n    }\n    exports.HistoryRecords = HistoryRecords;\n  }\n});\nims.set(\"./routing\", {\n  hash: 2780317025,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.routing = exports.RoutingMode = exports.Routing = void 0;\n    var _uri2 = require2(\"./uri/uri\");\n    var _core = require2(\"@beyond-js/kernel/core\");\n    var _history = require2(\"./history/history\");\n    var RoutingMode;\n    exports.RoutingMode = RoutingMode;\n    (function (RoutingMode2) {\n      RoutingMode2[RoutingMode2[\"Hash\"] = 0] = \"Hash\";\n      RoutingMode2[RoutingMode2[\"Pathname\"] = 1] = \"Pathname\";\n    })(RoutingMode || (exports.RoutingMode = RoutingMode = {}));\n    const serverside = typeof process === \"object\";\n    class Routing extends _core.Events {\n      #mode;\n      get mode() {\n        return this.#mode;\n      }\n      #history;\n      get history() {\n        return this.#history;\n      }\n      #initialised = false;\n      get initialised() {\n        return this.#initialised;\n      }\n      #resolve;\n      #ready = new Promise(resolve => this.#resolve = resolve);\n      get ready() {\n        return this.#ready;\n      }\n      #uri;\n      get uri() {\n        return this.#uri;\n      }\n      missing;\n      redirect;\n      #resolveConfigured;\n      #configured = new Promise(resolve => this.#resolveConfigured = resolve);\n      constructor() {\n        super();\n        const {\n          specifier\n        } = globalThis.__app_package;\n        !serverside && bimport(`${specifier}/config`).then(({\n          default: config\n        }) => {\n          let configured = config.routing?.mode;\n          let routingMode = configured === \"hash\" ? RoutingMode.Hash : RoutingMode.Pathname;\n          location.protocol === \"file:\" && (routingMode = RoutingMode.Hash);\n          ![0, 1].includes(routingMode) && (routingMode = location.protocol === \"file:\" ? RoutingMode.Hash : RoutingMode.Pathname);\n          this.#mode = routingMode;\n          this.#history = new _history.BeyondHistory(this, RoutingMode);\n          this.#resolveConfigured();\n        });\n      }\n      #redirect = async uri => {\n        if (typeof this.redirect !== \"function\") return;\n        const redirected = await this.redirect(uri);\n        if (!redirected) return;\n        if (typeof redirected !== \"string\") {\n          console.error(`Invalid route value set by custom routing function`, redirected);\n          return;\n        }\n        if (uri.pathname === redirected) return;\n        this.pushState(redirected);\n        return true;\n      };\n      pushState(uri, state) {\n        this.#configured.then(() => {\n          this.#history.pushState(uri, state);\n          this.update().catch(exc => console.error(exc.stack));\n        });\n      }\n      replaceState(state, title, uri) {\n        this.#configured.then(() => {\n          this.#history.replaceState(state, title, uri);\n          this.update().catch(exc => console.error(exc.stack));\n        });\n      }\n      #cancellationToken = new _core.CancellationToken();\n      update = async () => {\n        const cancellationTokenId = this.#cancellationToken.reset();\n        const {\n          hash,\n          pathname,\n          search\n        } = location;\n        const _uri = this.#mode === RoutingMode.Hash ? `/${hash.slice(1)}` : pathname + search + hash;\n        if (this.#uri?.uri === _uri) return;\n        const uri = this.#uri = new _uri2.URI(_uri);\n        const redirected = await this.#redirect(uri);\n        if (!this.#cancellationToken.check(cancellationTokenId)) return;\n        if (redirected) return;\n        this.#history && uri.uri !== this.#history.current && console.error(`History current \"${this.#history.current}\" is not equal to actual uri \"${uri.uri}\"`);\n        this.#initialised ? this.trigger(\"change\") : this.#resolve();\n        this.#initialised = true;\n      };\n      #started = false;\n      setup() {\n        this.#started = true;\n        !serverside && this.update().catch(exc => console.error(exc.stack));\n      }\n      back() {\n        this.#history.back();\n      }\n      forward() {\n        this.#history.forward();\n      }\n    }\n    exports.Routing = Routing;\n    const routing2 = new Routing();\n    exports.routing = routing2;\n    globalThis.routing = routing2;\n    !serverside && (beyond.navigate = (uri, state) => routing2.pushState(uri, state));\n    !serverside && (beyond.pushState = (uri, state) => routing2.pushState(uri, state));\n    !serverside && (beyond.back = () => routing2.back());\n    !serverside && (beyond.forward = () => routing2.forward());\n    !serverside && window.addEventListener(\"popstate\", () => routing2.update().catch(exc => console.error(exc.stack)));\n  }\n});\nims.set(\"./uri/querystring\", {\n  hash: 187911159,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.QueryString = void 0;\n    class QueryString extends Map {\n      constructor(search) {\n        super();\n        if (search.trim() === \"\") return;\n        search = search.slice(0, 1) === \"?\" ? search.slice(1) : search;\n        const split = search.split(\"&\");\n        for (let i = 0; i < split.length; ++i) {\n          const param = split[i].split(\"=\", 2);\n          const value = param[1] ? decodeURIComponent(param[1].replace(/\\+/g, \" \")) : void 0;\n          this.set(param[0], value);\n        }\n      }\n    }\n    exports.QueryString = QueryString;\n  }\n});\nims.set(\"./uri/uri\", {\n  hash: 748332499,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.URI = void 0;\n    var _querystring = require2(\"./querystring\");\n    class URI2 {\n      #uri;\n      get uri() {\n        return this.#uri;\n      }\n      #pathname;\n      get pathname() {\n        return this.#pathname;\n      }\n      #search;\n      get search() {\n        return this.#search;\n      }\n      #qs;\n      get qs() {\n        return this.#qs;\n      }\n      #hash;\n      get hash() {\n        return this.#hash;\n      }\n      constructor(uri) {\n        this.#uri = uri;\n        const [u, hash] = uri.split(\"#\");\n        const [pathname, search] = u.split(\"?\");\n        this.#pathname = pathname.startsWith(\"/\") ? pathname : `/${pathname}`;\n        this.#search = search ? search : \"\";\n        this.#qs = new _querystring.QueryString(this.#search);\n        this.#hash = hash;\n      }\n    }\n    exports.URI = URI2;\n  }\n});\n__pkg.exports.descriptor = [{\n  \"im\": \"./routing\",\n  \"from\": \"routing\",\n  \"name\": \"routing\"\n}, {\n  \"im\": \"./uri/uri\",\n  \"from\": \"URI\",\n  \"name\": \"URI\"\n}];\nvar routing, URI;\n__pkg.exports.process = function ({\n  require: require2,\n  prop,\n  value\n}) {\n  (require2 || prop === \"routing\") && (routing = require2 ? require2(\"./routing\").routing : value);\n  (require2 || prop === \"URI\") && (URI = require2 ? require2(\"./uri/uri\").URI : value);\n};\n__pkg.initialise(ims);\n};\n\ncode(module, require);\n_exports(module.exports);\n}}});\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","dependencies":[{"id":"@beyond-js/kernel@0.1.9/bundle","path":"E:\\workspace\\interior-consultant-master\\project\\node_modules\\@beyond-js\\kernel"},{"id":"@beyond-js/kernel@0.1.9/core","path":"E:\\workspace\\interior-consultant-master\\project\\node_modules\\@beyond-js\\kernel"}],"warnings":[]}